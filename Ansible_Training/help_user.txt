- name: Manage user accounts
  user:
      append:                # If `yes', will only add groups, not set them to just the list in `groups'.
      comment:               # Optionally sets the description (aka `GECOS') of user account.
      createhome:            # Unless set to `no', a home directory will be made for the user when the account is created
                               or if the home directory does not exist.
      expires:               # An expiry time for the user in epoch, it will be ignored on platforms that do not support
                               this. Currently supported on Linux and FreeBSD.
      force:                 # When used with `state=absent', behavior is as with `userdel --force'.
      generate_ssh_key:      # Whether to generate a SSH key for the user in question. This will *not* overwrite an
                               existing SSH key.
      group:                 # Optionally sets the user's primary group (takes a group name).
      groups:                # Puts the user in  list of groups. When set to the empty string ('groups='), the user is
                               removed from all groups except the primary group. Before
                               version 2.3, the only input format allowed was a 'comma
                               separated string', now it should be able to accept YAML
                               lists also.
      home:                  # Optionally set the user's home directory.
      local:                 # Forces the use of "local" command alternatives on platforms that implement it. This is
                               useful in environments that use centralized
                               authentification when you want to manipulate the local
                               users. I.E. it uses `luseradd` instead of `useradd`. This
                               requires that these commands exist on the targeted host,
                               otherwise it will be a fatal error.
      login_class:           # Optionally sets the user's login class for FreeBSD, OpenBSD and NetBSD systems.
      move_home:             # If set to `yes' when used with `home=', attempt to move the user's home directory to the
                               specified directory if it isn't there already.
      name:                  # (required) Name of the user to create, remove or modify.
      non_unique:            # Optionally when used with the -u option, this option allows to change the user ID to a
                               non-unique value.
      password:              # Optionally set the user's password to this crypted value.  See the user example in the
                               github examples directory for what this looks like in a
                               playbook. See http://docs.ansible.com/ansible/faq.html#how-
                               do-i-generate-crypted-passwords-for-the-user-module for
                               details on various ways to generate these password values.
                               Note on Darwin system, this value has to be cleartext.
                               Beware of security issues.
      remove:                # When used with `state=absent', behavior is as with `userdel --remove'.
      seuser:                # Optionally sets the seuser type (user_u) on selinux enabled systems.
      shell:                 # Optionally set the user's shell.
      skeleton:              # Optionally set a home skeleton directory. Requires createhome option!
      ssh_key_bits:          # Optionally specify number of bits in SSH key to create.
      ssh_key_comment:       # Optionally define the comment for the SSH key.
      ssh_key_file:          # Optionally specify the SSH key filename. If this is a relative filename then it will be
                               relative to the user's home directory.
      ssh_key_passphrase:    # Set a passphrase for the SSH key.  If no passphrase is provided, the SSH key will default
                               to having no passphrase.
      ssh_key_type:          # Optionally specify the type of SSH key to generate. Available SSH key types will depend on
                               implementation present on target host.
      state:                 # Whether the account should exist or not, taking action if the state is different from what
                               is stated.
      system:                # When creating an account, setting this to `yes' makes the user a system account.  This
                               setting cannot be changed on existing users.
      uid:                   # Optionally sets the `UID' of the user.
      update_password:       # `always' will update passwords if they differ.  `on_create' will only set the password for
                               newly created users.
